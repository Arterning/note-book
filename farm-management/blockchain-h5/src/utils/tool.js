/*
 * @Description  : 常用工具函数
 * @Autor        : Hemingway
 * @Date         : 2021-05-13 22:01:46
 * @LastEditors  : Your Name
 * @LastEditTime : 2022-07-08 21:02:22
 * @FilePath     : \blockchain-h5\src\utils\tool.js
 */
import Fingerprint2 from 'fingerprintjs2'
import store from '../store/index.js'

/**
 * @description: 格式化日期为指定字符串类型
 * @param {Date | Number} time 时间：日期类型或时间戳
 * @param {String} cFormat
 * @return {String}
 * @author: Hemingway
 */
export function StringifyDate(time, cFormat) {
  if (arguments.length === 0) {
    return null
  }
  const format = cFormat || '{y}-{m}-{d}'
  let date
  if (typeof time === 'object') {
    date = time
  } else {
    date = new Date(time)
  }
  const formatObj = {
    y: date.getFullYear(),
    m: date.getMonth() + 1,
    d: date.getDate(),
    h: date.getHours(),
    i: date.getMinutes(),
    s: date.getSeconds(),
    a: date.getDay()
  }
  const time_str = format.replace(/{(y|m|d|h|i|s|a)+}/g, (result, key) => {
    let value = formatObj[key]
    if (key === 'a')
      return ['一', '二', '三', '四', '五', '六', '日'][value - 1]
    if (result.length > 0 && value < 10) {
      value = '0' + value
    }
    return value || 0
  })
  return time_str
}

/**
 * @description: 扫码
 * @return {promise}
 * @author: guoxi
 */
export function scanCode() {
  let timer = null
  const promise = new Promise((resolve, reject) => {
    uni.scanCode({
      onlyFromCamera: true,
      success: function(res) {
        resolve(res)
      },
      complete: function() {
        uni.showLoading({
          title: '识别中...'
        })
        timer = setTimeout(() => {
          uni.hideLoading()
          clearTimeout(timer)
        }, 500)
      },
      fail: function(res) {
        reject(res)
        timer = setTimeout(() => {
          uni.hideLoading()
          clearTimeout(timer)
        })
      }
    })
  })
  return promise
}
/**
 * @description: 格式化日期为指定字符串类型
 * @param {Number} section 年限区间
 * @param {String} type 类型：开始 结束
 * @return {Object}
 * @author: jiagui_chen
 */
export function getDateFormat(type, section) {
  const date = new Date()

  let year = date.getFullYear()
  let month = date.getMonth() + 1
  let day = date.getDate()

  if (type === 'start') {
    year = year - section
  } else if (type === 'end') {
    year = year + section
  }
  month = month > 9 ? month : '0' + month
  day = day > 9 ? day : '0' + day

  return `${year}-${month}-${day}`
}

/**
 * @description: uni绘制canvas路径
 * @return {promise}
 * @author: guoxi
 */
export function canvasToTempFilePath(params) {
  const promise = new Promise((resolve, reject) => {
    uni.canvasToTempFilePath({
      canvasId: params.canvasId,
      destWidth: params.destWidth, //分享图片尺寸=画布尺寸1*缩放比0.5*像素比2
      destHeight: params.destHeight,
      quality: params.quality,
      fileType: params.fileType,
      success: function(res) {
        resolve(res)
      },
      fail: function(error) {
        reject(error)
      }
    })
  })
  return promise
}

/**
 * @description: uni获取系统信息
 * @return {promise}
 * @author: guoxi
 */
export function getSystemInfo() {
  const promise = new Promise((resolve, reject) => {
    uni.getSystemInfo({
      success: function(res) {
        resolve(res)
      },
      fail: function(error) {
        reject(error)
      }
    })
  })
  return promise
}

/**
 * @description: 时间转换
 * @return {promise}
 * @author: guoxi
 */

export function formateDate(date) {
  // 使用dayjs 把世界标准时间转换为北京时间
  console.log(date) // 2020-09-30T02:02:02+08:00
  // 把2020-09-30T02:02:02+08:00 截取出 '2020-9-30 2:2:2'
  const arr = date.split('T')
  const d = arr[0]
  const darr = d.split('-')

  const dd =
    parseInt(darr[0]) + '-' + parseInt(darr[1]) + '-' + parseInt(darr[2])
  console.log(dd) // 2020-9-30 2:2:2
  return dd
}

/**
 * @description: 图片预览
 * @return {promise}
 * @author: guoxi
 */
export function preViewImg(i, imgPaths) {
  uni.previewImage({
    current: i,
    urls: imgPaths,
    loop: true,
    success: result => {
      console.log(result)
    },
    fail: error => {
      console.log(error)
    }
  })
}

/**
 * @description: 检验值是否有效
 * @param {String} val
 * @return {Boolean}
 * @author: Hemingway
 */
export function validationText(val) {
  if (val !== 'null' && val !== '' && val !== '<invalid Value>') {
    return true
  }
  return false
}

/**
 * @description: 获取浏览器设备指纹
 * @return {promise}
 * @author: guoxi
 */
export function getFingerprintInfo() {
  const promise = new Promise(resolve => {
    Fingerprint2.get(components => {
      const values = components.map((component, index) => {
        if (index === 0) {
          //把微信浏览器里UA的wifi或4G等网络替换成空,不然切换网络会ID不一样
          return component.value.replace(/\bNetType\/\w+\b/, '')
        }
        return component.value
      })
      // 生成最终id murmur
      console.log(values) //使用的浏览器信息
      const murmur = Fingerprint2.x64hash128(values.join(''), 31)
      resolve(murmur)
      console.log(murmur) //生成的标识码
    })
  })
  return promise
}

/**
 * @description: 获取小程序图片地址
 * @return {promise}
 * @author: guoxi
 */
export function getImageUrl(id) {
  return `${process.env.VUE_APP_BASE_URL}/blockchaincomponent/file/downloadFile/w/v1?id=${id}&isAbbreviation=Y`
}

/**
 * @description: 获取智农云图片地址
 * @return {promise}
 * @author: guoxi
 */
export function getZNImageUrl(id) {
  return `${process.env.VUE_APP_BASE_URL}/nfapi/agriculturecomponent/file/downloadFile/w/v2?id=${id}&isAbbreviation=N`
}

/**
 * @description: 获取种植流程图片
 * @return {promise}
 * @author: qinjj
 */
export function getPlantImageUrl(url, id) {
  return `${url}?id=${id}&isAbbreviation=N`
}

/**
 * @description: 判断天气的图标
 * @return svg
 * @author: qjj
 */
export function getWeatherIcon(weather) {
  if (!weather) return ''
  if (weather.includes('雨')) {
    if (weather === '小雨') {
      return '<svg class="weather-icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg"><path d="M384 642.986667v-193.28h126.293333v-8.533334a201.813333 201.813333 0 1 1 226.986667 200.32v1.493334z" fill="#DDE5FF" /><path d="M114.986667 373.973333a269.013333 269.013333 0 0 0 538.026666 0 269.013333 269.013333 0 1 0-538.026666 0z" fill="#ECF1FF" /><path d="M490.666667 791.893333a27.52 27.52 0 0 1 16.64 35.626667l-19.84 54.613333a27.946667 27.946667 0 0 1-52.48-19.2l19.84-54.4a27.946667 27.946667 0 0 1 35.84-16.64z" fill="#88B5FF" /><path d="M571.733333 512a24.746667 24.746667 0 0 1 16.64 35.84l-36.053333 98.773333a24.533333 24.533333 0 0 1-35.626667 16.64 24.96 24.96 0 0 1-16.853333-35.84l36.053333-98.773333A24.746667 24.746667 0 0 1 571.733333 512z" fill="#92D0FF" /></svg>'
    } else if (weather === '中雨') {
      return '<svg class="weather-icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg"><path d="M384 642.986667v-193.28h126.293333v-8.533334a201.813333 201.813333 0 1 1 226.986667 200.32v1.493334z" fill="#DDE5FF" /><path d="M114.986667 373.973333a269.013333 269.013333 0 0 0 538.026666 0 269.013333 269.013333 0 1 0-538.026666 0z" fill="#ECF1FF" /><path d="M678.4 446.72a24.746667 24.746667 0 0 1 16.64 35.84l-85.333333 236.16a24.746667 24.746667 0 0 1-35.84 16.64 24.533333 24.533333 0 0 1-16.64-35.626667l85.333333-236.16a24.746667 24.746667 0 0 1 35.84-16.853333z" fill="#92D0FF" /><path d="M542.08 822.613333a28.16 28.16 0 0 1 16.853333 35.84l-10.666666 29.226667a27.946667 27.946667 0 0 1-52.48-19.2l10.666666-29.226667a27.52 27.52 0 0 1 35.626667-16.64zM384 791.893333a27.52 27.52 0 0 1 16.64 35.626667l-19.84 54.613333a27.946667 27.946667 0 0 1-52.48-19.2l19.84-54.4a27.946667 27.946667 0 0 1 35.84-16.64z" fill="#88B5FF" /><path d="M465.066667 512a24.746667 24.746667 0 0 1 16.64 35.84l-35.84 97.92a24.746667 24.746667 0 0 1-35.84 16.64 24.746667 24.746667 0 0 1-16.64-35.84l35.84-98.773333A24.746667 24.746667 0 0 1 465.066667 512z" fill="#92D0FF" /></svg>'
    } else if (weather === '大雨') {
      return '<svg class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg"><path d="M384 642.986667v-193.28h126.293333v-8.533334a201.813333 201.813333 0 1 1 226.986667 200.32v1.493334z" fill="#DDE5FF" /><path d="M114.986667 373.973333a269.013333 269.013333 0 0 0 538.026666 0 269.013333 269.013333 0 1 0-538.026666 0z" fill="#ECF1FF" /><path d="M583.253333 446.72a24.746667 24.746667 0 0 1 16.64 35.84l-85.333333 236.16a24.746667 24.746667 0 0 1-35.84 16.64 24.533333 24.533333 0 0 1-16.64-35.626667l85.333333-236.16a24.746667 24.746667 0 0 1 35.84-16.853333z" fill="#92D0FF" /><path d="M448 822.613333a27.946667 27.946667 0 0 1 16.64 35.84l-10.453333 29.226667a27.946667 27.946667 0 0 1-35.84 16.64 28.16 28.16 0 0 1-16.853334-35.84l10.666667-29.226667a27.946667 27.946667 0 0 1 35.84-16.64z m181.333333-11.946666a27.946667 27.946667 0 0 1 16.64 35.84l-15.36 42.666666a27.946667 27.946667 0 0 1-52.48-19.2l15.36-42.666666A27.946667 27.946667 0 0 1 629.333333 810.666667z m-341.333333-19.413334a27.52 27.52 0 0 1 16.64 35.626667l-19.84 54.613333a27.946667 27.946667 0 0 1-52.48-19.2l19.84-54.4a27.946667 27.946667 0 0 1 35.84-16.64z" fill="#88B5FF" /><path d="M369.92 512a24.746667 24.746667 0 0 1 16.64 35.84l-35.84 98.773333a24.746667 24.746667 0 0 1-35.84 16.64 24.96 24.96 0 0 1-16.213333-36.693333l36.053333-98.773333a24.746667 24.746667 0 0 1 35.2-15.786667z m353.706667 10.453333a24.746667 24.746667 0 0 1 16.64 35.84L704 656.213333a27.946667 27.946667 0 1 1-52.48-19.2l35.84-98.773333a24.746667 24.746667 0 0 1 35.84-16.64z" fill="#92D0FF" /></svg>'
    } else if (weather === '无雨') {
      return '<svg class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg"><path d="M335.127 400.29a269.964 269.964 0 1 0 539.928 0 269.964 269.964 0 1 0-539.928 0z" fill="#FFA448" /><path d="M605.09 130.327a268.902 268.902 0 0 1 175.384 64.717c59.336 96.982 28.3 236.507-77.005 324.86-102.381 85.904-240.211 94.282-326.078 25.488a268.753 268.753 0 0 1-42.264-145.101c0-149.094 120.87-269.964 269.964-269.964z" fill="#FFBF40" /><path d="M605.09 130.327l2.421 0.01c24.353 6.004 45.615 18.31 61.366 37.087 51.61 61.496 24.594 169.128-60.332 240.389-84.937 71.27-195.612 79.183-247.222 17.687-13.256-15.826-21.327-34.676-24.557-55.166 14.904-135 129.35-240.007 268.325-240.007z" fill="#FFD44E" /><path d="M435.993 208.819a69.222 83.065 50 1 0 88.991 106.055 69.222 83.065 50 1 0-88.99-106.055z" fill="#FFE174" /><path d="M383.953 885.015v-193.35l126.269 0.01a209.953 209.953 0 0 1-0.168-8.406c0-111.43 90.327-201.756 201.747-201.756 111.43 0 201.756 90.326 201.756 201.756 0 102.884-77.014 187.783-176.538 200.192v1.554H383.953z" fill="#D9E2FC" /><path d="M114.949 616.02a269.005 269.005 0 1 0 538.01 0 269.005 269.005 0 1 0-538.01 0z" fill="#F2F5FF" /></svg>'
    } else {
      return '<svg class="weather-icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg"><path d="M384 642.986667v-193.28h126.293333v-8.533334a201.813333 201.813333 0 1 1 226.986667 200.32v1.493334z" fill="#DDE5FF" /><path d="M114.986667 373.973333a269.013333 269.013333 0 0 0 538.026666 0 269.013333 269.013333 0 1 0-538.026666 0z" fill="#ECF1FF" /><path d="M490.666667 791.893333a27.52 27.52 0 0 1 16.64 35.626667l-19.84 54.613333a27.946667 27.946667 0 0 1-52.48-19.2l19.84-54.4a27.946667 27.946667 0 0 1 35.84-16.64z" fill="#88B5FF" /><path d="M571.733333 512a24.746667 24.746667 0 0 1 16.64 35.84l-36.053333 98.773333a24.533333 24.533333 0 0 1-35.626667 16.64 24.96 24.96 0 0 1-16.853333-35.84l36.053333-98.773333A24.746667 24.746667 0 0 1 571.733333 512z" fill="#92D0FF" /></svg>'
    }
  } else if (weather.includes('雪')) {
    if (weather === '小雪') {
      return '<svg class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg"><path d="M384 642.986667v-193.28h126.293333v-8.533334a201.813333 201.813333 0 1 1 226.986667 200.32v1.493334z" fill="#DDE5FF" /><path d="M114.986667 373.973333a269.013333 269.013333 0 0 0 538.026666 0 269.013333 269.013333 0 1 0-538.026666 0z" fill="#ECF1FF" /><path d="M533.333333 634.666667c8.533333-14.933333 21.333333-23.466667 29.013334-19.2s6.4 19.84-2.133334 34.56a79.36 79.36 0 0 1-17.92 19.84 80.426667 80.426667 0 0 1 26.24-5.546667c17.066667 0 30.933333 6.826667 30.933334 15.36s-13.866667 15.573333-30.933334 15.573333a85.333333 85.333333 0 0 1-28.8-7.253333 97.28 97.28 0 0 1 21.333334 21.333333c8.533333 14.933333 9.386667 30.293333 2.133333 34.56s-21.333333-4.266667-29.013333-18.986666a82.133333 82.133333 0 0 1-8.106667-25.6 76.8 76.8 0 0 1-8.32 25.6c-8.533333 14.72-21.333333 23.253333-28.8 18.986666s-6.4-19.626667 2.133333-34.56a92.373333 92.373333 0 0 1 21.333334-21.333333 85.333333 85.333333 0 0 1-28.8 7.253333c-17.066667 0-30.933333-7.04-30.933334-15.573333s13.866667-15.36 30.933334-15.36a81.706667 81.706667 0 0 1 26.24 5.546667 79.36 79.36 0 0 1-17.92-19.84c-8.533333-14.72-9.6-30.293333-2.133334-34.56s21.333333 4.266667 28.8 19.2a83.413333 83.413333 0 0 1 8.32 28.373333 89.173333 89.173333 0 0 1 6.4-28.373333z m-8.106666 34.346666a7.68 7.68 0 0 1-2.986667 5.76 6.186667 6.186667 0 0 1-5.546667 0 6.826667 6.826667 0 0 1 2.773334 4.906667 7.893333 7.893333 0 0 1-3.626667 5.546667 6.4 6.4 0 0 1 6.4 0 6.826667 6.826667 0 0 1 2.986667 4.693333 6.613333 6.613333 0 0 1 2.773333-4.693333 6.826667 6.826667 0 0 1 6.613333 0 7.253333 7.253333 0 0 1-3.626666-5.546667 6.826667 6.826667 0 0 1 2.773333-4.906667 6.826667 6.826667 0 0 1-5.76 0 7.466667 7.466667 0 0 1-2.773333-5.76z" fill="#88B5FF" /><path d="M520.32 863.786667c8.96-6.186667 18.56-7.466667 21.333333-3.2s-1.493333 13.226667-10.453333 19.413333a51.413333 51.413333 0 0 1-14.933333 6.4 44.586667 44.586667 0 0 1 16.64 3.84c9.813333 4.48 16 12.16 13.653333 17.066667s-11.946667 5.12-21.333333 0a55.04 55.04 0 0 1-14.506667-11.946667 56.32 56.32 0 0 1 5.973333 17.92c0 10.88-2.56 19.84-7.893333 21.333333s-10.666667-7.893333-11.52-18.773333a49.92 49.92 0 0 1 2.133333-16.853333 50.56 50.56 0 0 1-11.733333 12.373333c-8.746667 6.186667-18.56 7.68-21.333333 3.2s1.493333-13.013333 10.453333-19.2a55.253333 55.253333 0 0 1 17.493333-6.826667 56.96 56.96 0 0 1-18.56-3.626666c-9.813333-4.48-15.786667-12.16-13.653333-17.066667s12.16-5.333333 21.333333 0a50.56 50.56 0 0 1 13.653334 10.24 59.946667 59.946667 0 0 1-4.693334-15.573333c0-10.88 2.773333-20.053333 8.106667-21.333334s10.666667 7.893333 11.52 18.773334a55.253333 55.253333 0 0 1-2.986667 18.56 61.866667 61.866667 0 0 1 11.306667-14.72z m-13.866667 17.493333a4.266667 4.266667 0 0 1-2.773333 2.133333 4.48 4.48 0 0 1-3.2-1.493333 5.333333 5.333333 0 0 1 0 3.626667 5.546667 5.546667 0 0 1-3.626667 2.133333c1.92 0 3.2 0 3.84 1.493333a3.84 3.84 0 0 1 0 3.413334 4.266667 4.266667 0 0 1 2.986667-1.92c1.28 0 2.346667 0 3.626667 1.92a3.84 3.84 0 0 1 0-3.413334 4.053333 4.053333 0 0 1 2.986666-2.133333 4.266667 4.266667 0 0 1-3.413333-1.493333 4.906667 4.906667 0 0 1-0.426667-4.266667z" fill="#92D0FF" /></svg>'
    } else if (weather === '中雪') {
      return '<svg class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg"><path d="M384 642.986667v-193.28h126.293333v-8.533334a201.813333 201.813333 0 1 1 226.986667 200.32v1.493334z" fill="#DDE5FF" /><path d="M114.986667 373.973333a269.013333 269.013333 0 0 0 538.026666 0 269.013333 269.013333 0 1 0-538.026666 0z" fill="#ECF1FF" /><path d="M643.2 634.666667c8.533333-14.933333 21.333333-23.466667 28.8-19.2s6.613333 19.84-1.92 34.56a80.64 80.64 0 0 1-18.133333 19.84 82.773333 82.773333 0 0 1 26.24-5.546667c17.066667 0 30.933333 6.826667 30.933333 15.36s-13.866667 15.573333-30.933333 15.573333a86.826667 86.826667 0 0 1-28.8-7.253333 94.08 94.08 0 0 1 21.333333 21.333333c8.533333 14.933333 9.386667 30.293333 1.92 34.56s-20.266667-4.266667-28.8-18.986666a77.013333 77.013333 0 0 1-8.106667-25.6 81.92 81.92 0 0 1-8.32 25.6c-8.533333 14.72-21.333333 23.253333-28.8 18.986666s-6.4-19.626667 2.133334-34.56a88.106667 88.106667 0 0 1 21.333333-21.333333 86.826667 86.826667 0 0 1-28.8 7.253333c-17.066667 0-30.933333-7.04-30.933333-15.573333s13.866667-15.36 30.933333-15.36a82.773333 82.773333 0 0 1 25.386667 5.546667 79.36 79.36 0 0 1-17.92-19.84c-8.533333-14.72-9.6-30.293333-2.133334-34.56s20.266667 4.266667 28.8 19.2a83.413333 83.413333 0 0 1 8.32 28.373333 89.173333 89.173333 0 0 1 8.106667-28.373333z m-8.106667 34.346666a7.68 7.68 0 0 1-2.986666 5.76 6.186667 6.186667 0 0 1-5.546667 0 6.826667 6.826667 0 0 1 2.773333 4.906667 7.893333 7.893333 0 0 1-3.626666 5.546667 6.4 6.4 0 0 1 6.4 0 7.466667 7.466667 0 0 1 2.986666 4.693333 6.613333 6.613333 0 0 1 2.773334-4.693333 6.826667 6.826667 0 0 1 6.613333 0 7.253333 7.253333 0 0 1-3.626667-5.546667 6.826667 6.826667 0 0 1 2.773334-4.906667 6.826667 6.826667 0 0 1-5.76 0 6.826667 6.826667 0 0 1-2.773334-5.76z" fill="#88B5FF" /><path d="M631.253333 863.786667c8.96-6.186667 18.56-7.466667 21.333334-3.2s-1.706667 13.226667-10.453334 19.413333a51.413333 51.413333 0 0 1-14.933333 6.4 44.586667 44.586667 0 0 1 16.64 3.84c9.813333 4.48 16 12.16 13.653333 17.066667s-12.16 5.12-21.333333 0a59.093333 59.093333 0 0 1-14.72-11.946667 52.693333 52.693333 0 0 1 6.186667 17.92c1.066667 10.88-2.56 19.84-8.106667 21.333333s-10.453333-7.893333-11.306667-18.773333a49.28 49.28 0 0 1 1.92-16.853333 46.506667 46.506667 0 0 1-11.52 12.373333c-8.746667 6.186667-18.56 7.68-21.333333 3.2s1.706667-13.013333 10.453333-19.2a58.88 58.88 0 0 1 17.706667-6.826667 55.893333 55.893333 0 0 1-18.56-3.626666c-9.813333-4.48-15.786667-12.16-13.653333-17.066667s12.16-5.333333 21.333333 0a50.56 50.56 0 0 1 13.653333 10.24 52.693333 52.693333 0 0 1-4.693333-15.573333c0-10.88 2.773333-20.053333 8.106667-21.333334s10.453333 7.893333 11.52 18.773334a55.253333 55.253333 0 0 1-2.986667 18.56 61.866667 61.866667 0 0 1 11.093333-14.72z m-13.866666 17.493333a4.266667 4.266667 0 0 1-2.773334 2.133333 4.48 4.48 0 0 1-3.413333-1.493333 4.48 4.48 0 0 1 0 3.626667 5.546667 5.546667 0 0 1-3.626667 2.133333 4.266667 4.266667 0 0 1 3.84 1.493333 4.48 4.48 0 0 1 0 3.413334 4.266667 4.266667 0 0 1 2.986667-1.92c1.066667 0 2.346667 0 3.626667 1.92a3.84 3.84 0 0 1 0-3.413334 4.053333 4.053333 0 0 1 2.773333-2.133333 3.84 3.84 0 0 1-3.2-1.493333 4.906667 4.906667 0 0 1-0.213333-4.266667zM423.893333 558.506667c16.426667-11.093333 34.133333-13.44 39.68-5.12s-3.2 23.68-19.626666 34.56a90.026667 90.026667 0 0 1-28.8 11.52 92.586667 92.586667 0 0 1 30.08 7.466666c17.706667 8.533333 28.586667 22.826667 24.32 31.573334s-21.333333 9.173333-39.893334 0a99.413333 99.413333 0 0 1-26.24-21.333334 100.266667 100.266667 0 0 1 10.453334 32.426667c1.493333 19.626667-5.333333 36.266667-15.36 36.906667s-18.773333-14.72-20.266667-34.346667a93.866667 93.866667 0 0 1 4.48-30.72 94.08 94.08 0 0 1-21.333333 22.4c-16.426667 10.88-34.133333 13.226667-39.68 5.12s3.2-23.68 19.626666-34.773333a106.666667 106.666667 0 0 1 32-11.733334 106.666667 106.666667 0 0 1-33.28-7.04c-17.706667-8.746667-28.586667-22.826667-24.32-31.786666s21.333333-8.96 39.893334 0a90.24 90.24 0 0 1 24.32 19.2 91.946667 91.946667 0 0 1-8.533334-29.653334c-1.493333-19.84 5.546667-36.266667 15.36-36.906666s18.773333 14.72 20.266667 34.346666a102.826667 102.826667 0 0 1-5.973333 33.706667 106.666667 106.666667 0 0 1 22.826666-25.813333z m-25.813333 31.36a7.893333 7.893333 0 0 1-5.546667 4.053333 9.173333 9.173333 0 0 1-5.76-2.773333 6.826667 6.826667 0 0 1 0 6.4 8.32 8.32 0 0 1-6.4 3.84 9.386667 9.386667 0 0 1 7.04 2.773333 8.106667 8.106667 0 0 1 0 6.4 8.746667 8.746667 0 0 1 5.546667-3.413333 8.32 8.32 0 0 1 6.4 3.626666 8.106667 8.106667 0 0 1 0-7.466666 7.253333 7.253333 0 0 1 5.12-3.626667 8.32 8.32 0 0 1-5.76-2.986667 8.32 8.32 0 0 1 0-7.466666z" fill="#92D0FF" /><path d="M396.586667 771.626667a59.946667 59.946667 0 0 1-3.2 21.333333 64 64 0 0 1 13.866666-16c10.026667-6.826667 21.333333-8.533333 24.32-3.626667s-1.706667 14.72-11.733333 21.333334a53.333333 53.333333 0 0 1-17.493333 7.253333 62.506667 62.506667 0 0 1 18.56 4.266667c11.093333 5.12 17.92 13.866667 15.36 19.413333s-13.653333 5.76-24.746667 0a67.2 67.2 0 0 1-16.426667-13.226667 60.373333 60.373333 0 0 1 7.04 19.84c0 12.16-2.986667 22.4-9.173333 22.826667s-11.733333-8.746667-12.8-21.333333a58.24 58.24 0 0 1 2.346667-18.986667 56.106667 56.106667 0 0 1-13.013334 14.08c-10.026667 7.04-21.333333 8.533333-24.32 3.626667s1.706667-14.72 11.733334-21.333334a61.653333 61.653333 0 0 1 19.626666-7.68 61.013333 61.013333 0 0 1-21.333333-4.053333c-10.88-5.12-17.92-13.866667-15.146667-19.2s13.44-5.973333 24.533334 0a56.96 56.96 0 0 1 15.146666 11.52 58.88 58.88 0 0 1-5.546666-18.346667c-1.066667-12.16 2.986667-21.333333 8.96-22.826666s11.733333 8.746667 12.8 21.333333z m-4.906667 24.746666a4.266667 4.266667 0 0 1-2.986667 1.92 4.48 4.48 0 0 1-3.626666-1.706666 4.48 4.48 0 0 1 0 4.053333c0 1.28-1.92 1.92-3.84 2.346667a5.546667 5.546667 0 0 1 4.053333 1.706666 5.12 5.12 0 0 1 0 4.053334 4.053333 4.053333 0 0 1 7.253333 0 5.546667 5.546667 0 0 1 0-4.693334 5.333333 5.333333 0 0 1 3.2-2.346666 5.333333 5.333333 0 0 1-3.626666-1.706667 5.333333 5.333333 0 0 1 0-4.48z" fill="#88B5FF" /></svg>'
    } else if (weather === '大雪') {
      return '<svg class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg"><path d="M384 642.986667v-193.28h126.293333v-8.533334a201.813333 201.813333 0 1 1 226.986667 200.32v1.493334z" fill="#DDE5FF" /><path d="M114.986667 373.973333a269.013333 269.013333 0 0 0 538.026666 0 269.013333 269.013333 0 1 0-538.026666 0z" fill="#ECF1FF" /><path d="M533.333333 634.666667c8.533333-14.933333 21.333333-23.466667 29.013334-19.2s6.4 19.84-2.133334 34.56a79.36 79.36 0 0 1-17.92 19.84 80.426667 80.426667 0 0 1 26.24-5.546667c17.066667 0 30.933333 6.826667 30.933334 15.36s-13.866667 15.573333-30.933334 15.573333a85.333333 85.333333 0 0 1-28.8-7.253333 97.28 97.28 0 0 1 21.333334 21.333333c8.533333 14.933333 9.386667 30.293333 2.133333 34.56s-21.333333-4.266667-29.013333-18.986666a82.133333 82.133333 0 0 1-8.106667-25.6 76.8 76.8 0 0 1-8.32 25.6c-8.533333 14.72-21.333333 23.253333-28.8 18.986666s-6.4-19.626667 2.133333-34.56a92.373333 92.373333 0 0 1 21.333334-21.333333 85.333333 85.333333 0 0 1-28.8 7.253333c-17.066667 0-30.933333-7.04-30.933334-15.573333s13.866667-15.36 30.933334-15.36a81.706667 81.706667 0 0 1 26.24 5.546667 79.36 79.36 0 0 1-17.92-19.84c-8.533333-14.72-9.6-30.293333-2.133334-34.56s21.333333 4.266667 28.8 19.2a83.413333 83.413333 0 0 1 8.32 28.373333 89.173333 89.173333 0 0 1 6.4-28.373333z m-8.106666 34.346666a7.68 7.68 0 0 1-2.986667 5.76 6.186667 6.186667 0 0 1-5.546667 0 6.826667 6.826667 0 0 1 2.773334 4.906667 7.893333 7.893333 0 0 1-3.626667 5.546667 6.4 6.4 0 0 1 6.4 0 6.826667 6.826667 0 0 1 2.986667 4.693333 6.613333 6.613333 0 0 1 2.773333-4.693333 6.826667 6.826667 0 0 1 6.613333 0 7.253333 7.253333 0 0 1-3.626666-5.546667 6.826667 6.826667 0 0 1 2.773333-4.906667 6.826667 6.826667 0 0 1-5.76 0 7.466667 7.466667 0 0 1-2.773333-5.76z" fill="#88B5FF" /><path d="M520.32 863.786667c8.96-6.186667 18.56-7.466667 21.333333-3.2s-1.493333 13.226667-10.453333 19.413333a51.413333 51.413333 0 0 1-14.933333 6.4 44.586667 44.586667 0 0 1 16.64 3.84c9.813333 4.48 16 12.16 13.653333 17.066667s-11.946667 5.12-21.333333 0a55.04 55.04 0 0 1-14.506667-11.946667 56.32 56.32 0 0 1 5.973333 17.92c0 10.88-2.56 19.84-7.893333 21.333333s-10.666667-7.893333-11.52-18.773333a49.92 49.92 0 0 1 2.133333-16.853333 50.56 50.56 0 0 1-11.733333 12.373333c-8.746667 6.186667-18.56 7.68-21.333333 3.2s1.493333-13.013333 10.453333-19.2a55.253333 55.253333 0 0 1 17.493333-6.826667 56.96 56.96 0 0 1-18.56-3.626666c-9.813333-4.48-15.786667-12.16-13.653333-17.066667s12.16-5.333333 21.333333 0a50.56 50.56 0 0 1 13.653334 10.24 59.946667 59.946667 0 0 1-4.693334-15.573333c0-10.88 2.773333-20.053333 8.106667-21.333334s10.666667 7.893333 11.52 18.773334a55.253333 55.253333 0 0 1-2.986667 18.56 61.866667 61.866667 0 0 1 11.306667-14.72z m-13.866667 17.493333a4.266667 4.266667 0 0 1-2.773333 2.133333 4.48 4.48 0 0 1-3.2-1.493333 5.333333 5.333333 0 0 1 0 3.626667 5.546667 5.546667 0 0 1-3.626667 2.133333c1.92 0 3.2 0 3.84 1.493333a3.84 3.84 0 0 1 0 3.413334 4.266667 4.266667 0 0 1 2.986667-1.92c1.28 0 2.346667 0 3.626667 1.92a3.84 3.84 0 0 1 0-3.413334 4.053333 4.053333 0 0 1 2.986666-2.133333 4.266667 4.266667 0 0 1-3.413333-1.493333 4.906667 4.906667 0 0 1-0.426667-4.266667z m266.666667-381.653333c14.293333-16.426667 32.426667-23.893333 40.746667-16.64s3.2 26.24-11.093334 42.666666a103.466667 103.466667 0 0 1-27.306666 21.333334 103.68 103.68 0 0 1 34.133333 0c21.333333 4.266667 37.12 16.213333 34.986667 26.88s-21.333333 16-42.666667 11.946666a112.853333 112.853333 0 0 1-34.133333-16 119.893333 119.893333 0 0 1 21.333333 31.786667c7.04 21.333333 4.48 40.106667-5.76 42.666667s-24.533333-10.24-31.573333-30.72a107.946667 107.946667 0 0 1-5.12-34.773334 100.48 100.48 0 0 1-16.426667 29.866667c-14.293333 16.426667-32.64 23.893333-40.746667 16.853333s-3.2-26.24 10.88-42.666666a114.773333 114.773333 0 0 1 30.933334-21.333334 112 112 0 0 1-37.546667 1.92c-21.333333-4.053333-37.12-16.213333-34.986667-26.88s21.333333-16 42.666667-11.733333a101.333333 101.333333 0 0 1 31.36 13.44 106.666667 106.666667 0 0 1-17.706667-29.226667c-7.04-21.333333-4.48-40.106667 5.76-43.733333s24.533333 10.24 31.573334 30.933333a112.426667 112.426667 0 0 1 3.413333 37.12 113.92 113.92 0 0 1 17.28-33.706666z m-18.56 40.96v1.493333a8.106667 8.106667 0 0 1-4.693333 5.12 8.746667 8.746667 0 0 1-7.04-1.28 7.466667 7.466667 0 0 1-3.626667 12.8 8.96 8.96 0 0 1 8.32 0 8.32 8.32 0 0 1 2.346667 6.613333 7.466667 7.466667 0 0 1 12.8-3.2 9.386667 9.386667 0 0 1-3.2-7.68 8.533333 8.533333 0 0 1 4.693333-5.333333 10.24 10.24 0 0 1-7.04-1.493333 8.96 8.96 0 0 1-2.133333-8.106667z" fill="#92D0FF" /><path d="M783.573333 827.733333c8.32-5.973333 17.493333-7.253333 21.333334-2.986666s-1.493333 12.373333-9.813334 18.346666a54.186667 54.186667 0 0 1-14.933333 6.186667 46.506667 46.506667 0 0 1 15.786667 3.626667c9.173333 4.266667 15.146667 11.52 13.013333 16.213333s-11.52 4.906667-21.333333 0a46.72 46.72 0 0 1-13.866667-11.306667 61.44 61.44 0 0 1 5.76 17.066667c0 10.24-2.56 18.773333-7.68 19.2s-10.026667-7.466667-10.88-17.706667a44.586667 44.586667 0 0 1 1.92-16 50.133333 50.133333 0 0 1-10.88 11.946667c-8.533333 5.76-17.706667 7.253333-21.333333 2.986667s1.493333-12.373333 10.026666-18.346667a50.133333 50.133333 0 0 1 16.64-6.4 54.826667 54.826667 0 0 1-17.493333-3.413333c-9.386667-4.48-15.146667-11.733333-13.013333-16.426667s11.52-4.906667 21.333333 0a45.226667 45.226667 0 0 1 13.013333 9.6 50.773333 50.773333 0 0 1-4.906666-15.36c0-10.24 2.56-18.986667 7.68-19.413333s10.026667 7.466667 11.093333 17.706666a55.253333 55.253333 0 0 1-2.773333 17.706667 50.56 50.56 0 0 1 11.306666-13.226667z m-13.226666 16.64a5.546667 5.546667 0 0 1-2.986667 2.133334 4.48 4.48 0 0 1-2.986667-1.493334 4.693333 4.693333 0 0 1 0 3.413334 3.84 3.84 0 0 1-3.413333 1.92 5.333333 5.333333 0 0 1 3.626667 1.493333 4.48 4.48 0 0 1 0 3.413333s2.133333-1.92 3.413333-1.92 2.346667 0 3.413333 1.92a4.48 4.48 0 0 1 0-3.84 4.693333 4.693333 0 0 1 2.773334-2.133333 3.626667 3.626667 0 0 1-2.986667-1.493333 4.053333 4.053333 0 0 1-0.853333-3.413334z" fill="#88B5FF" /><path d="M313.173333 558.506667c16.213333-11.093333 33.92-13.44 39.466667-5.12s-3.2 23.68-19.626667 34.56a90.026667 90.026667 0 0 1-28.8 11.52 92.586667 92.586667 0 0 1 30.08 7.466666c17.706667 8.533333 28.586667 22.826667 24.32 31.573334s-21.333333 9.173333-39.893333 0a99.413333 99.413333 0 0 1-26.24-21.333334 100.266667 100.266667 0 0 1 10.453333 32.426667c1.493333 19.626667-5.333333 36.266667-15.146666 36.906667s-18.986667-14.72-21.333334-34.346667a93.013333 93.013333 0 0 1 4.266667-30.72 94.08 94.08 0 0 1-21.333333 22.4c-16.426667 10.88-34.133333 13.226667-39.68 5.12s3.413333-23.68 19.626666-34.773333a106.666667 106.666667 0 0 1 32.213334-11.733334 106.666667 106.666667 0 0 1-33.493334-7.04c-17.706667-8.746667-28.586667-22.826667-24.32-31.786666s21.333333-8.96 39.893334 0a90.88 90.88 0 0 1 24.533333 19.2 87.68 87.68 0 0 1-8.746667-29.653334c-1.28-19.84 5.546667-36.266667 15.36-36.906666s18.773333 14.72 21.333334 34.346666a102.826667 102.826667 0 0 1-5.973334 33.706667 102.186667 102.186667 0 0 1 23.04-25.813333z m-26.026666 31.36a7.893333 7.893333 0 0 1-5.333334 4.053333 9.173333 9.173333 0 0 1-5.973333-2.773333 7.68 7.68 0 0 1 0 6.4 9.173333 9.173333 0 0 1-6.613333 3.84 9.386667 9.386667 0 0 1 7.04 2.773333 7.253333 7.253333 0 0 1 0 6.4 9.173333 9.173333 0 0 1 5.546666-3.413333 8.106667 8.106667 0 0 1 6.4 3.626666 8.106667 8.106667 0 0 1 0-7.466666 7.893333 7.893333 0 0 1 5.333334-3.626667 7.68 7.68 0 0 1-5.76-2.986667 8.106667 8.106667 0 0 1 0-7.466666z" fill="#92D0FF" /><path d="M285.866667 771.626667a66.773333 66.773333 0 0 1-3.413334 21.333333 68.693333 68.693333 0 0 1 13.866667-16c10.026667-6.826667 21.333333-8.533333 24.32-3.626667s-1.706667 14.72-11.733333 21.333334a53.333333 53.333333 0 0 1-17.493334 7.253333 61.013333 61.013333 0 0 1 18.56 4.266667c11.093333 5.12 17.92 13.866667 15.36 19.413333s-13.653333 5.76-24.533333 0a67.2 67.2 0 0 1-16.426667-13.226667 64 64 0 0 1 6.826667 19.84c0 12.16-2.986667 22.4-9.173333 22.826667s-11.733333-8.746667-12.8-21.333333a58.24 58.24 0 0 1 2.346666-18.986667 52.48 52.48 0 0 1-13.013333 14.08c-9.813333 7.04-21.333333 8.533333-24.32 3.626667s1.92-14.72 11.733333-21.333334a61.013333 61.013333 0 0 1 19.84-7.68 62.293333 62.293333 0 0 1-21.333333-4.053333c-10.88-5.12-17.706667-13.866667-15.146667-19.2s13.44-5.973333 24.533334 0a50.986667 50.986667 0 0 1 15.146666 11.52 58.88 58.88 0 0 1-5.546666-18.346667c0-12.16 2.986667-21.333333 8.96-22.826666s11.946667 8.746667 13.013333 21.333333z m-5.12 24.746666a4.266667 4.266667 0 0 1-2.986667 1.92 4.693333 4.693333 0 0 1-3.626667-1.706666 4.48 4.48 0 0 1 0 4.053333c0 1.28-1.92 1.92-3.84 2.346667 1.92 0 3.413333 0 4.053334 1.706666a5.12 5.12 0 0 1 0 4.053334 5.973333 5.973333 0 0 1 3.413333-2.346667 5.12 5.12 0 0 1 3.84 2.133333 5.546667 5.546667 0 0 1 0-4.693333 5.12 5.12 0 0 1 3.413333-2.346667 4.48 4.48 0 0 1-3.626666-1.706666 4.693333 4.693333 0 0 1 0-4.48z" fill="#88B5FF" /></svg>'
    } else {
      return '<svg class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg"><path d="M384 642.986667v-193.28h126.293333v-8.533334a201.813333 201.813333 0 1 1 226.986667 200.32v1.493334z" fill="#DDE5FF" /><path d="M114.986667 373.973333a269.013333 269.013333 0 0 0 538.026666 0 269.013333 269.013333 0 1 0-538.026666 0z" fill="#ECF1FF" /><path d="M533.333333 634.666667c8.533333-14.933333 21.333333-23.466667 29.013334-19.2s6.4 19.84-2.133334 34.56a79.36 79.36 0 0 1-17.92 19.84 80.426667 80.426667 0 0 1 26.24-5.546667c17.066667 0 30.933333 6.826667 30.933334 15.36s-13.866667 15.573333-30.933334 15.573333a85.333333 85.333333 0 0 1-28.8-7.253333 97.28 97.28 0 0 1 21.333334 21.333333c8.533333 14.933333 9.386667 30.293333 2.133333 34.56s-21.333333-4.266667-29.013333-18.986666a82.133333 82.133333 0 0 1-8.106667-25.6 76.8 76.8 0 0 1-8.32 25.6c-8.533333 14.72-21.333333 23.253333-28.8 18.986666s-6.4-19.626667 2.133333-34.56a92.373333 92.373333 0 0 1 21.333334-21.333333 85.333333 85.333333 0 0 1-28.8 7.253333c-17.066667 0-30.933333-7.04-30.933334-15.573333s13.866667-15.36 30.933334-15.36a81.706667 81.706667 0 0 1 26.24 5.546667 79.36 79.36 0 0 1-17.92-19.84c-8.533333-14.72-9.6-30.293333-2.133334-34.56s21.333333 4.266667 28.8 19.2a83.413333 83.413333 0 0 1 8.32 28.373333 89.173333 89.173333 0 0 1 6.4-28.373333z m-8.106666 34.346666a7.68 7.68 0 0 1-2.986667 5.76 6.186667 6.186667 0 0 1-5.546667 0 6.826667 6.826667 0 0 1 2.773334 4.906667 7.893333 7.893333 0 0 1-3.626667 5.546667 6.4 6.4 0 0 1 6.4 0 6.826667 6.826667 0 0 1 2.986667 4.693333 6.613333 6.613333 0 0 1 2.773333-4.693333 6.826667 6.826667 0 0 1 6.613333 0 7.253333 7.253333 0 0 1-3.626666-5.546667 6.826667 6.826667 0 0 1 2.773333-4.906667 6.826667 6.826667 0 0 1-5.76 0 7.466667 7.466667 0 0 1-2.773333-5.76z" fill="#88B5FF" /><path d="M520.32 863.786667c8.96-6.186667 18.56-7.466667 21.333333-3.2s-1.493333 13.226667-10.453333 19.413333a51.413333 51.413333 0 0 1-14.933333 6.4 44.586667 44.586667 0 0 1 16.64 3.84c9.813333 4.48 16 12.16 13.653333 17.066667s-11.946667 5.12-21.333333 0a55.04 55.04 0 0 1-14.506667-11.946667 56.32 56.32 0 0 1 5.973333 17.92c0 10.88-2.56 19.84-7.893333 21.333333s-10.666667-7.893333-11.52-18.773333a49.92 49.92 0 0 1 2.133333-16.853333 50.56 50.56 0 0 1-11.733333 12.373333c-8.746667 6.186667-18.56 7.68-21.333333 3.2s1.493333-13.013333 10.453333-19.2a55.253333 55.253333 0 0 1 17.493333-6.826667 56.96 56.96 0 0 1-18.56-3.626666c-9.813333-4.48-15.786667-12.16-13.653333-17.066667s12.16-5.333333 21.333333 0a50.56 50.56 0 0 1 13.653334 10.24 59.946667 59.946667 0 0 1-4.693334-15.573333c0-10.88 2.773333-20.053333 8.106667-21.333334s10.666667 7.893333 11.52 18.773334a55.253333 55.253333 0 0 1-2.986667 18.56 61.866667 61.866667 0 0 1 11.306667-14.72z m-13.866667 17.493333a4.266667 4.266667 0 0 1-2.773333 2.133333 4.48 4.48 0 0 1-3.2-1.493333 5.333333 5.333333 0 0 1 0 3.626667 5.546667 5.546667 0 0 1-3.626667 2.133333c1.92 0 3.2 0 3.84 1.493333a3.84 3.84 0 0 1 0 3.413334 4.266667 4.266667 0 0 1 2.986667-1.92c1.28 0 2.346667 0 3.626667 1.92a3.84 3.84 0 0 1 0-3.413334 4.053333 4.053333 0 0 1 2.986666-2.133333 4.266667 4.266667 0 0 1-3.413333-1.493333 4.906667 4.906667 0 0 1-0.426667-4.266667z" fill="#92D0FF" /></svg>'
    }
  } else if (weather === '晴') {
    return '<svg class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg"><path d="M167.564 512a363.055 363.055 0 1 0 726.109 0 363.055 363.055 0 1 0-726.11 0z" fill="#FFA448" /><path d="M530.618 148.945c90.02 0 172.405 32.768 235.846 87.031 79.816 130.42 38.074 318.055-103.545 436.876-137.681 115.526-323.025 126.799-438.505 34.294A361.36 361.36 0 0 1 167.564 512c0-200.518 162.536-363.055 363.054-363.055z" fill="#FFBF40" /><path d="M530.618 148.945c1.099 0 2.197 0 3.296 0.02 32.74 8.089 61.31 24.63 82.487 49.868 69.4 82.711 33.076 227.449-81.138 323.286C421.041 617.956 272.19 628.596 202.8 545.894c-17.837-21.252-28.682-46.592-33.03-74.147 20.043-181.583 173.95-322.802 360.85-322.802z" fill="#FFD44E" /><path d="M303.217 254.506A93.09 111.71 50 1 0 422.892 397.13a93.09 111.71 50 1 0-119.675-142.624z" fill="#FFE174" /><path d="M176.873 549.236l80.616 46.546v93.09l-80.616 46.546-80.617-46.545v-93.091z" fill="#FFEC7F" /></svg>'
  } else if (weather === '沙尘暴') {
    return '<svg class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg"><path d="M761 167.564c-45.745 0-87.487 24.725-108.917 64.14-8.741 16.085-2.532 36.072 13.861 44.646 15.789 8.266 35.273 2.923 44.498-11.841l1.024-1.75c9.756-17.958 28.71-29.185 49.524-29.185 30.98 0 56.078 24.623 56.078 55.008 0 29.584-23.794 53.713-53.639 54.96l-2.792 0.057H154.652c-18.581 0-33.643 14.764-33.643 33 0.01 18.227 15.071 33.001 33.652 33.001h606.264c68.208 0 123.439-54.179 123.439-121.018S829.133 167.564 761 167.564z m-184.767 707.49a122.042 122.042 0 0 1-107.65-64.14 32.88 32.88 0 0 1 13.702-44.645 33.401 33.401 0 0 1 43.986 11.84l1.005 1.75a55.464 55.464 0 0 0 48.966 29.185c30.608 0 55.426-24.623 55.426-55.008 0-29.584-23.524-53.713-53.024-54.96l-2.765-0.056H154.27c-18.357 0-33.252-14.755-33.252-32.992 0-18.236 14.895-33.01 33.262-33.01h421.878c67.426 0 122.024 54.18 122.024 121.018s-54.598 121.019-121.95 121.019zM153.6 484.073h316.51q32.58 0 32.58 32.582 0 32.581-32.58 32.581H153.6q-32.582 0-32.582-32.581 0-32.582 32.582-32.582zM698.182 530.618a46.545 46.545 0 1 0 93.09 0 46.545 46.545 0 1 0-93.09 0zM847.127 451.49a32.582 32.582 0 1 0 65.164 0 32.582 32.582 0 1 0-65.164 0zM772.655 674.91a32.582 32.582 0 1 0 65.163 0 32.582 32.582 0 1 0-65.163 0zM884.364 591.127a32.582 32.582 0 1 0 65.163 0 32.582 32.582 0 1 0-65.163 0z" fill="#A1BCE4" /></svg>'
  } else if (weather === '阴') {
    return '<svg class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg"><path d="M359.47 826.154V603.927H504.6a256.206 256.206 0 0 1-0.187-9.663c0-128.074 103.824-231.898 231.89-231.898 128.074 0 231.898 103.824 231.898 231.89 0 118.262-88.52 215.849-202.91 230.11v1.788h-405.82z" fill="#DCE5FE" /><path d="M50.278 516.962a309.192 309.192 0 1 0 618.385 0 309.192 309.192 0 1 0-618.385 0z" fill="#ECF1FF" /></svg>'
  } else if (weather.includes('霾')) {
    return '<svg class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg"><path d="M335.127 400.29a269.964 269.964 0 1 0 539.928 0 269.964 269.964 0 1 0-539.928 0z" fill="#FFA448" /><path d="M605.09 130.327a268.902 268.902 0 0 1 175.384 64.717c59.336 96.982 28.3 236.507-77.005 324.86-102.381 85.904-240.211 94.282-326.078 25.488a268.753 268.753 0 0 1-42.264-145.101c0-149.094 120.87-269.964 269.964-269.964z" fill="#FFBF40" /><path d="M605.09 130.327l2.421 0.01c24.353 6.004 45.615 18.31 61.366 37.087 51.61 61.496 24.594 169.128-60.332 240.389-84.937 71.27-195.612 79.183-247.222 17.687-13.256-15.826-21.327-34.676-24.557-55.166 14.904-135 129.35-240.007 268.325-240.007z" fill="#FFD44E" /><path d="M435.993 208.819a69.222 83.065 50 1 0 88.991 106.055 69.222 83.065 50 1 0-88.99-106.055z" fill="#FFE174" /><path d="M383.953 885.015v-193.35l126.269 0.01a209.953 209.953 0 0 1-0.168-8.406c0-111.43 90.327-201.756 201.747-201.756 111.43 0 201.756 90.326 201.756 201.756 0 102.884-77.014 187.783-176.538 200.192v1.554H383.953z" fill="#EEE1D4" /><path d="M114.949 616.02a269.005 269.005 0 1 0 538.01 0 269.005 269.005 0 1 0-538.01 0z" fill="#FAEFE3" /></svg>'
  } else if (weather.includes('雾')) {
    return '<svg class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg"><path d="M530.618 148.945c200.518 0 363.055 162.537 363.055 363.055 0 32.182-4.19 63.376-12.046 93.09H179.61A363.594 363.594 0 0 1 167.564 512c0-200.518 162.536-363.055 363.054-363.055z" fill="#FFA448" /><path d="M530.618 148.945c90.02 0 172.405 32.768 235.846 87.031 65.9 107.678 48.929 254.362-38.698 369.115l-548.156 0.01A363.594 363.594 0 0 1 167.564 512c0-200.518 162.536-363.055 363.054-363.055z" fill="#FFBF40" /><path d="M530.618 148.945c1.108 0 2.206 0 3.305 0.02 32.73 8.089 61.3 24.63 82.478 49.868 69.4 82.711 33.076 227.449-81.138 323.286C421.041 617.956 272.19 628.596 202.8 545.894c-17.837-21.252-28.691-46.61-33.03-74.174 20.043-181.556 173.96-322.775 360.85-322.775z" fill="#FFD44E" /><path d="M303.217 254.506A93.09 111.71 50 1 0 422.892 397.13a93.09 111.71 50 1 0-119.675-142.624z" fill="#FFE174" /><path d="M162.909 660.945h390.982q32.582 0 32.582 32.582T553.89 726.11H162.909q-32.582 0-32.582-32.582t32.582-32.582zM162.909 781.964h726.11q32.581 0 32.581 32.581 0 32.582-32.582 32.582H162.91q-32.582 0-32.582-32.582 0-32.581 32.582-32.581zM712.145 660.945h176.873q32.582 0 32.582 32.582t-32.582 32.582H712.145q-32.581 0-32.581-32.582t32.581-32.582z" fill="#79A6E7" /></svg>'
  } else {
    return '<svg class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg"><path d="M335.127 400.29a269.964 269.964 0 1 0 539.928 0 269.964 269.964 0 1 0-539.928 0z" fill="#FFA448" /><path d="M605.09 130.327a268.902 268.902 0 0 1 175.384 64.717c59.336 96.982 28.3 236.507-77.005 324.86-102.381 85.904-240.211 94.282-326.078 25.488a268.753 268.753 0 0 1-42.264-145.101c0-149.094 120.87-269.964 269.964-269.964z" fill="#FFBF40" /><path d="M605.09 130.327l2.421 0.01c24.353 6.004 45.615 18.31 61.366 37.087 51.61 61.496 24.594 169.128-60.332 240.389-84.937 71.27-195.612 79.183-247.222 17.687-13.256-15.826-21.327-34.676-24.557-55.166 14.904-135 129.35-240.007 268.325-240.007z" fill="#FFD44E" /><path d="M435.993 208.819a69.222 83.065 50 1 0 88.991 106.055 69.222 83.065 50 1 0-88.99-106.055z" fill="#FFE174" /><path d="M383.953 885.015v-193.35l126.269 0.01a209.953 209.953 0 0 1-0.168-8.406c0-111.43 90.327-201.756 201.747-201.756 111.43 0 201.756 90.326 201.756 201.756 0 102.884-77.014 187.783-176.538 200.192v1.554H383.953z" fill="#D9E2FC" /><path d="M114.949 616.02a269.005 269.005 0 1 0 538.01 0 269.005 269.005 0 1 0-538.01 0z" fill="#F2F5FF" /></svg>'
  }
}

/**
 * @description: 动态显示时间
 * @return svg
 * @author: qjj
 */
export function getDate(datetime, startType) {
  var date = new Date(datetime) //时间戳为10位需*1000，时间戳为13位的话不需乘1000
  var year = date.getFullYear(),
    month = ('0' + (date.getMonth() + 1)).slice(-2),
    sdate = ('0' + date.getDate()).slice(-2),
    hour = ('0' + date.getHours()).slice(-2),
    minute = ('0' + date.getMinutes()).slice(-2),
    second = ('0' + date.getSeconds()).slice(-2)
  // 拼接
  // var result = year + "-"+ month +"-"+ sdate +" "+ hour +":"+ minute +":" + second;
  // 返回
  // return result;
  let resStr = ''
  if (startType === 'year')
    resStr =
      year +
      '-' +
      month +
      '-' +
      sdate +
      ' ' +
      hour +
      ':' +
      minute +
      ':' +
      second
  if (startType === 'day') resStr = year + '-' + month + '-' + sdate
  if (startType === 'month') resStr = month + '-' + sdate
  if (startType === 'hour') resStr = hour + ':' + minute + ':' + second
  return resStr
}

/**
 * @description: 根据配置信息处理种植的信息
 * @return object
 * @author: qjj
 */
export function getSteps(MenuTree) {
  let farmRecords = store.state.app.farmRecords,
    stepsMenuTree = MenuTree,
    isStaticData = store.state.app.isStaticData,
    excludeArr = ['日期', '农事图片', '信息采集员']
  return new Promise(resolve => {
    let newStepsArr = [],
      imgs
    farmRecords.forEach(res => {
      let currentConfig = stepsMenuTree.subTree.find(item => {
        return item.menuName === res.operationType
      })
      // 如果主配置项不显示，直接返回
      if (
        typeof currentConfig === 'undefined' ||
        currentConfig?.isChecked !== 'Y'
      )
        return
      let operationStandardArr = []
      // 判断是否使用静态模板
      if (isStaticData) {
        imgs = res.recordImageId || []
        if (Array.isArray(currentConfig.subTree)) {
          let sonConfig = currentConfig.subTree.filter(item => {
            return !excludeArr.includes(item.menuName) && item.isChecked === 'Y'
          })
          operationStandardArr = sonConfig.map(res => {
            return `${res.menuName}: xxx`
          })
        }
      } else {
        if (res.operationStandard && Array.isArray(currentConfig.subTree)) {
          // 判断子配置项的显示影藏
          res.operationStandard.split('；').forEach(res => {
            let sonConfig = currentConfig.subTree.find(item => {
              return res.split('：')[0] === item.menuName
            })
            if (typeof sonConfig === undefined || sonConfig?.isChecked !== 'Y')
              return
            // 去除字符串中的句号
            if (res.indexOf('。') !== -1) {
              res = res.slice(0, res.length - 1)
            }
            operationStandardArr.push(res)
          })
        }
        imgs =
          (res.recordImageId &&
            res.recordImageId
              .split(',')
              .slice(0, 1)
              .map(item =>
                getPlantImageUrl(res.recordImageCallBackUrl, item)
              )) ||
          []
      }
      newStepsArr.push({
        date: res.farmRecordTime,
        title: res.operationType,
        extra:
          '记录：' +
          `${res.recorder &&
            (res.recorder.length > 3
              ? res.recorder.slice(0, 3) + '...'
              : res.recorder)}`,
        scene: {
          temper: res.temper,
          weather: getWeatherIcon(res.weather)
        },
        body: {
          desc: operationStandardArr,
          imgs
        }
      })
    })
    store.commit('app/SET_ALL_STEPS', newStepsArr)
    resolve(newStepsArr)
  })
}
