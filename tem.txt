解决SSH连接Vultr VPS主机经常出现断开连接失败
UseDNS修改配置
修改服务器配置：

/etc/ssh/sshd_config

将UseDNS yes 改为 no，保存。

最后，我们重启SSH然后检查是否稳定一些。

ClientAliveInterval ..
ClientAliveCount Max ..

docker-compose or docker compose ..

install nvm ..ok
curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.2/install.sh | bash
export NVM_DIR="$([ -z "${XDG_CONFIG_HOME-}" ] && printf %s "${HOME}/.nvm" || printf %s "${XDG_CONFIG_HOME}/nvm")"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" # This loads nvm

install msf
curl https://raw.githubusercontent.com/rapid7/metasploit-omnibus/master/config/templates/metasploit-framework-wrappers/msfupdate.erb > msfinstall && \
  chmod 755 msfinstall && \
  ./msfinstall

这个是使用nano进行编辑提交的页面，退出方法为：
Ctrl + X然后输入y再然后回车，就可以退出了
如果你想把默认编辑器换成别的：
方法一、在GIT配置中设置 core.editor: git config --global core.editor "vim"


方法二、编辑~/.gitconfig文件。在core中添加editor = vim。如此以后在使用git的时候就自动使用vim作为编辑器

git提交后出现nano界面,解决方法

smartIDE可以玩一下


打开配置文件，postgresql.conf然后listen_addresses = '*'在CONNECTIONS AND AUTHENTICATION部分中添加。这指示服务器在所有网络接口上进行侦听。

sudo nano /etc/postgresql/11/main/postgresql.conf
修改如下内容：

#------------------------------------------------------------------------------
# CONNECTIONS AND AUTHENTICATION
#------------------------------------------------------------------------------

# - Connection Settings -

listen_addresses = '*'     # what IP address(es) to listen on;
保存文件并重新启动PostgreSQL服务以使更改生效：

psql命令有两种格式，分别是：

psql postgres://username:password@host:port/dbname  

psql -U username -h hostname -p port -d dbname

修改登录PostgreSQL密码

#ALTER USER postgres WITH PASSWORD 'xxxxxxxxxxx';
ALTER ROLE
注：

密码postgres要用引号引起来,命令最后有分号

登录PostgreSQL

#sudo -u postgres psql

\h：查看SQL命令的解释，比如\h select。

\?：查看psql命令列表。

\l：列出所有数据库。

\c [database_name]：连接其他数据库。

\d：列出当前数据库的所有表格。

\d [table_name]：列出某一张表格的结构。

\du：列出所有用户。

\e：打开文本编辑器。

\conninfo：列出当前数据库和连接的信息。

Mysql连接报错：1130-host ... is not allowed to connect to this MySql server如何处理
 
　　这个问题是因为在数据库服务器中的mysql数据库中的user的表中没有权限(也可以说没有用户)，下面将记录我遇到问题的过程及解决的方法。

　　在搭建完LNMP环境后用Navicate连接出错

　　遇到这个问题首先到mysql所在的服务器上用连接进行处理

　　1、连接服务器: mysql -u root -p

　　2、看当前所有数据库：show databases;

　　3、进入mysql数据库：use mysql;

　　4、查看mysql数据库中所有的表：show tables;

　　5、查看user表中的数据：select Host, User,Password from user;

　　6、修改user表中的Host:update user set Host='%' where User='root';

　　7、最后刷新一下：flush privileges;

#一定要记得在写sql的时候要在语句完成后加上" ; "下面是图示说明

PowerDesigner 是数据库建模软件

Debian 10安装了一个称为UFW的防火墙配置工具。它是用于管理iptables防火墙规则的用户友好型前端。它的主要目标是使防火墙的管理变得更容易，简单。

sudo ufw status verbose命令将会打印防火墙的状态。Status: inactive表示防火墙状态为非活动状态。Status: active表示UFW已激活。

sudo ufw status verbose
verbose表示打印详细信息
您可以运行命令sudo ufw app list列出服务器上所有可用的应用程序配置文件。sudo ufw app info命令可以查找指定配置文件包含的防火墙规则详细信息。

之前postgresql数据库一直无法连接 原来还是防火墙没有开放这端口
ufw allow 5432
ufw delete allow 5432

alter user postgres with password ''




naviat破解
https://www.ykbkw.top/post/18.html


ssh config配置文件

Host 192.168.1.178
  HostName 192.168.1.178
  User kali

Host 192.168.56.10
  HostName 192.168.56.10
  User vagrant

Host vagrantos.com
  HostName vagrantos.com
  User vagrant

Host gitee.com
  Identityfile id_rsa.gitee
  HostName gitee.com
  User git

Host github.com
  Identityfile id_rsa.github
  HostName github.com
  User git


mysql 开启远程访问权限
方式一：改表法
顾名思义,该方法就是直接修改更改"mysql"数据库里的"user"表里的"host"项，从"localhost"改为"%"
update user set host='%' where user='root';

方式二：授权法
通过GRANT命令可以授予主机远程访问权限
grant all privileges on db.* to 'user'
--赋予任何主机访问权限：
GRANT ALL PRIVILEGES ON *.* TO 'root'@'%' IDENTIFIED BY 'password' WITH GRANT OPTION;
--允许指定主机(IP地址)访问权限：
GRANT ALL PRIVILEGES ON *.* TO 'myuser'@'192.168.1.3' IDENTIFIED BY 'root' WITH GRANT OPTION;
通过GRANT命令赋权后,需要通过FLUSH PRIVILEGES刷新权限表使修改生效：
FLUSH PRIVILEGES;

再次查看MySQL远程访问权限配置
select  User,authentication_string,Host from user;

出于安全性考虑，尤其是正式环境下

1.不推荐直接给root开启远程访问权限。
本案例仅以root用户作为例子做开启远程访问权限的配置,此为演示环境!

2.建议做权限细分和限制
正式环境中，推荐通过创建Mysql用户并给对应的用户赋权的形式来开放远程服务权限，并指定IP地址，赋权时根据用户需求，在GRANT命令中只开放slect、update等权限，做到权限粒度最小化。


微软app无法正常打开的解决方法
安装windows terminal 和 wsl ubuntu linux
在某博客看到的方法，供参考，可以尝试一下，我的也是这么解决的
1、打开“运行”输入 inetcpl.cpl （“WINDOWS”+“R”键，输入 inetcpl.cpl亦可）
2、点开高级往下拉，勾上"使用TLS 1.2"选项，或者点还原高级设置。

https://jtxiao.com/main/posts/wslwindows-subsystem-for-linux%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/

install mosh
https://ideawrights.com/mosh-windows-wsl/


mosh的安装和配置
https://www.cnblogs.com/journeyonmyway/p/8908483.html
install mosh client
sudo apt-get install python-software-properties
sudo add-apt-repository ppa:keithw/mosh
sudo apt-get update
sudo apt-get install mosh
https://www.linode.com/docs/guides/install-mosh-server-as-ssh-alternative-on-linux/



ufw allow 60001
mosh root@ip -p 60001


