如何分析explain执行计划
先查看type列，如果出现all关键词，就代表sql执行全表扫描 依次从最优到最差分别为：system > const > eq_ref > ref > range > index > ALL ，一般来说，得保证查询达到 range 级别，最好达到 ref 级别。
再看key列，如果null代表没有使用索引
再看rows列，如果越大，代表需要扫描的行数越多，相应耗时就长
最后看 extra列，是否有影响性能的 Using filesort 或者 Using temporary


避免MySql死锁的方法：
● 约定以相同的顺序访问表
● 大事务分小事务
● 一个事务中，一次锁定资源
● 锁升级，采用表锁

MySQL 中有哪几种锁？
1、表级锁： 开销小， 加锁快； 不会出现死锁； 锁定粒度大， 发生锁冲突的概率最高， 并发度最低。 
2、行级锁： 开销大， 加锁慢； 会出现死锁； 锁定粒度最小， 发生锁冲突的概率最低， 并发度也最高。/
3、页面锁： 开销和加锁时间界于表锁和行锁之间； 会出现死锁； 锁定粒度界于表锁和行锁之间， 并发度一般。 


BLOB 和TEXT 有什么区别？
BLOB保存二进制数据，TEXT保存字符数据

如何显示前 50 行？
在 MySQL 中， 使用以下代码查询显示前 50 行： SELECT*FROM TABLE LIMIT 0,50;


MySQL 里记录货币用什么字段类型好?
DECIMAL

实践中如何优化 MySQL
1. SQL语句优化 比如用join替代子查询
小表驱动大表
2. 索引优化
3. 数据库表结构优化
4. 配置和硬件优化




简单描述 MySQL 中，索引，主键，唯一索引，联合索引
主键是一种特殊的唯一索引
两个或更多个列上的索引被称作联合索引，联合索引又叫复合索引。
比如我要查询select xx from .. where a=x and b=y
同时对a b字段做了限制 我可以在a b上建立联合索引
所谓最左前缀匹配即是where条件必须有联合索引的第一个字段。


解释一下左连接和右连接
左连接就是左表为主表 左表的记录全部会显示 右表没有匹配到的显示为NULL
右连接就刚好相反


快照读
MVCC是乐观锁

还有其他锁
row lock
gap lock
next key lock




做过哪些MySQL索引相关优化
尽量使用主键查询: 聚簇索引上存储了全部数据, 相比普通索引查询, 减少了回表的消耗. 
若频繁查询某一列数据, 可以考虑利用覆盖索引避免回表. 
联合索引将高频字段放在最左边


一千万条数据的表, 如何分页查询
当进行分页时，MySQL 并不是跳过 offset 行，而是取 offset+N 行，然后放弃前 offset 行，返回 N 行。例如 limit 10000, 20。mysql排序取出10020条数据后，仅返回20条数据，查询和排序的代价都很高。那当 offset 特别大的时候，效率就非常的低下，所以我们要对sql进行改写
SELECT id, name, description FROM film ORDER BY name LIMIT 1000, 10;
mysql在数据量大的情况下分页起点越大查询速度越慢，100万条起的查询速度已经需要7秒钟。这是一个我们无法接受的数值！
改进
select * from T where id > lastId Limit LIMIT





Innodb 引擎和 myisam 引擎的区别和使用场景
MyISAM适合：(1)做很多count 的计算；(2)插入不频繁，查询非常频繁；(3)没有事务。
InnoDB适合：(1)可靠性要求比较高，或者要求事务；(2)表更新和查询都相当的频繁，并且行锁定的机会比较大的情况。


























