
数据库优良设计：
A、减少数据冗余
B、避免数据维护异常
C、节约存储空间
D、高效的访问

数据库设计：简单的讲就是一个应用系统需要存放数据，我们需要思考用几个表来实现，我们需要建库建表，
        建表是最为关键的，我们需要思考建几张表，表与表之间的关系是什么，每张表有多少字段，
        特别是联系表与表之间关系的字段尤其要设计好，每个字段有什么特性，
        比如：数据类型、数据长度、数据约束（主外键、唯一约束、非空约束等）、数据索引等

*************************************************************************************
数据库设计的步骤：
A、需求分析（数据分析）
B、逻辑设计（ER图）
C、物理设计（数据库特点转换）
D、维护优化（需求建表、索引优化，大表拆分）

*************************************************************************************
数据库设计
就是建库、建表，建库是比较容易的，建表是相对复杂的，关系型数据，表结构就是根本，
所以这一步最为关键也最为复杂，建表不好的地方在于，建立表之间的关系是复杂的，
建立表之间的关系的复杂体现在实现表与表之间联系的字段的选择上。
这一步如果搞定之后，下面就是每个表中的字段类型、长度、约束的建立，这些东西，关系到程序是否好写，存储是否方便，查询是否高效。


1，对一个数据库设计前，我们要了解我们数据库要存入哪些数据，这些数据有哪些特征(重要程度？ 时效性？ )然后对症下药，
    时效性不同->可以定时归档，清理。   重要程度或扩展程度不同可以->分库分表……
2，了解数据之间的联系，1对1,1对多还是多对多，从而建立的数据表可以是独立的，可以是关联性质的。
3，如果是日志文件，我们打算存入数据库。就要想到这种数据增长性很大，如果只存不清理会造成数据库使用量的大幅度增长，是不好的。
    我们要定期进行归档，清除操作。
*************************************************************************************
1，我们接到一个项目：
首先要去分析这个项目有哪些模块--->然后针对具体模块分析有哪些属性--->针对属性分析哪个属性或哪几个属性的集合可以用来标识这个属性[唯一标识]------->分析这个模块数据是否永久存储，
    是否数据增长很快，是否经常查询---->如果是就要考虑分库分表了。
    如果不是，那么这些数据是否只会存储一定时间，是否需要永久记录--->如果是我们就定期归档及数据的迁移操作了。
如：注册用户表：
属性：用户名，密码，电话，邮箱，地址，昵称，头像，……
唯一标识： 邮箱？ 用户名+邮箱->md5加密来标识？……
存储特点：随系统上线时间逐渐增加，需要永久存储。 ---> 必须分库分表操作了。
如拟定2亿用户 可以分4个库，每个库100张表，每张表50w条记录。

2，分析这些模块之间的关联性：
1对1？ 1对多？ 多对多？ ---->画ER图。

比如，电子商务网站系统包括几个模块：用户模块，商品模块，订单模块，购物车模块，供应商模块。
记录注册用户信息
属性：用户名、密码、电话、邮箱、身份证号、地址、姓名、昵称。。。
可选唯一标识属性：用户名、身份证号、电话
存储特点：随系统上线时间逐渐增加，需要永久存储。

