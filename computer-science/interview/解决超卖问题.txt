解决超卖问题
每一个用户只能抢购一件商品的限制；在数据库减库存时加上库存数量判断，库存数量为0时阻止秒杀订单的生成。

排他锁方式
在数据库减库存时加上库存数量判断，防止数据变为负数
1 update goods set num = num - 1 WHERE id = 1001 and num > 0


采用了版本号的方式，其实也就是CAS的原理。
 select version from goods WHERE id= 1001
 update goods set num = num - 1, version = version + 1 WHERE id= 1001 AND num > 0 AND version = @version(上面查到的version);

可见第二种CAS是失败重试，并无加锁。应该比第一种加锁效率要高很多。类似于Java中的Synchronize和CAS。

第三种解决超卖的方式如下
 利用redis的单线程预减库存。比如商品有100件。那么我在redis存储一个k,v。例如 <gs1001, 100>
每一个用户线程进来，key值就减1，等减到0的时候，全部拒绝剩下的请求。
那么也就是只有100个线程会进入到后续操作。所以一定不会出现超卖的现象
