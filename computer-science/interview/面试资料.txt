https://www.yuque.com/itsaysay/mzsmvg/13.spring-cloud

Filter和AOP的设计思想很近



B tree 和B+ tree 和 红黑树


实现懒加载，线程安全的单例
使用枚举方式 其他的都是垃圾
https://www.jianshu.com/p/5647d1f598c7
通过反编译之后，一切秘密尽在眼前，原来它内部是执行了静态代码块，和饿汉式代码有异曲同工之妙，前面我们分析了当一个Java类第一次被真正使用到的时候静态资源被初始化、Java类的加载和初始化过程都是线程安全的。所以，创建一个enum类型是线程安全的。


什么是restful api，和rpc调用有什么区别
restful api是用Http协议的动词来多资源进行crud操作
rpc调用 thrift
rpc是远程过程调用 不一定要使用http协议
rpc肯定是基于tcp协议



双写迁移方案




sync和reentrent锁的区别
reentrentlock更灵活 可以指定公平还是非公平





在加锁的时候，用什么锁对象是内存占用最小的，我说是Object对象，面试官说不对，我一时没想出来，面试结束后和朋友探讨，觉得应该是长度为 0 的 byte 数组


如果从库同步主库的数据延迟比较高，怎么才能在写到主库后立刻能够读取到数据。
在往主库写数据的时候，可以直接往内存缓存中写一份，设置一个较短的过期时间，后面可以直接从缓存中读到数据。

主从同步有什么好处？
水平扩展数据库的负载能力。
容错，高可用。Failover(失败切换)/High Availability
数据备份。

eureka 和 zookeeper 做服务发现的区别在哪里；
springboot用的是eureka
dubbo用的是zookeeper

Zookeeper保证CP 强调一致性
当向注册中心查询服务列表时，我们可以容忍注册中心返回的是几分钟以前的注册信息，但不能接受服务直接down掉不可用。也就是说，服务注册功能对可用性的要求要高于一致性。但是zk会出现这样一种情况，当master节点因为网络故障与其他节点失去联系时，剩余节点会重新进行leader选举。问题在于，选举leader的时间太长，30 ~ 120s, 且选举期间整个zk集群都是不可用的，这就导致在选举期间注册服务瘫痪。在云部署的环境下，因网络问题使得zk集群失去master节点是较大概率会发生的事，虽然服务能够最终恢复，但是漫长的选举时间导致的注册长期不可用是不能容忍的。


Eureka保证AP 强调可用性
Eureka在设计时就优先保证可用性。Eureka各个节点都是平等的，几个节点挂掉不会影响正常节点的工作，剩余的节点依然可以提供注册和查询服务。而Eureka的客户端在向某个Eureka注册或时如果发现连接失败，则会自动切换至其它节点，只要有一台Eureka还在，就能保证注册服务可用(保证可用性)，只不过查到的信息可能不是最新的(不保证强一致性)。除此之外，Eureka还有一种自我保护机制，如果在15分钟内超过85%的节点都没有正常的心跳，那么Eureka就认为客户端与注册中心出现了网络故障，此时会出现以下几种情况： 
1. Eureka不再从注册列表中移除因为长时间没收到心跳而应该过期的服务； 
2. Eureka仍然能够接受新服务的注册和查询请求，但是不会被同步到其它节点上(即保证当前节点依然可用) ；
3. 当网络稳定时，当前实例新的注册信息会被同步到其它节点中；
因此， Eureka可以很好的应对因网络故障导致部分节点失去联系的情况，而不会像zookeeper那样使整个注册服务瘫痪。

Eureka作为单纯的服务注册中心来说要比zookeeper更加“专业”，因为注册服务更重要的是可用性，我们可以接受短期内达不到一致性的状况






redis和zookeeper如何实现分布式锁
如何用Zookeeper实现分布式锁？https://zhuanlan.zhihu.com/p/69638683
漫画：什么是分布式锁？
分布式锁的实现有哪些？
1.Memcached分布式锁
利用Memcached的add命令。此命令是原子性操作，只有在key不存在的情况下，才能add成功，也就意味着线程得到了锁。
2.Redis分布式锁
和Memcached的方式类似，利用Redis的setnx命令。此命令同样是原子性操作，只有在key不存在的情况下，才能set成功。（setnx命令并不完善，后续会介绍替代方案）
3.Zookeeper分布式锁
利用Zookeeper的顺序临时节点，来实现分布式锁和等待队列。Zookeeper设计的初衷，就是为了实现分布式锁服务的。
4.Chubby



redis的数据类型
String Hash List Set








ElasticSearch倒排索引
https://blog.csdn.net/qq_43403025/article/details/114779166


详解Hystrix熔断机制
Hystrix熔断和限流详解


